（1）首先将上下左右规定一定顺序，不断地遍历整个图。每到一个点首先判断是否为终点，如果是则返回答案，
如果不是的话向按顺序四周判断可否走，把可以走的方向入队，然后按照队伍的顺序走（走到队头的那个节点）。
当队伍为空的时候仍未找到节点则判定为没有出路，否则输出解的路径长度，并且这个路径是最短的。
（2）首先将上下左右规定一定顺序，不断地遍历整个图。每到一个点首先判断是否为终点，如果是则返回答案，
如果不是的话向按顺序四周判断可否走，把可以走的方向压入栈中，然后向一个方向继续走，
当无路可走的时候返回上一个节点走其他可以走的方向，并且把节点弹出。
如果在第二次返回根节点之前能找到出口则判断为可以走出，否则判断为走不出。
注：上述两个搜索都要用另外一个visit数组记录走过的点防止重复走
（3）广度优先搜索是一层一层搜索并且保留全部节点，占用空间大，一旦数据大起来容易空间极大，
而深度优先搜索会把不要的点弹出，占用空间小，对于不用找最短路径，
只用判断可不可以走出去的时候用深度优先搜索