分治算法往往使用递归来实现，结合自己的理解
（1）请分析为何分治算法常用递归实现？
（2）如何判断一个递归的程序是分治算法，特征是什么？

（1）由于我们使用分治思想的时候是大问题分解成子问题，这自然导致递归过程的产生，递归实现和我们的思考过程十分符合。
（2）分治程序和普通递归不同的是他们都有三个步骤:
分解：将原问题分解为若干个规模较小，相互独立，与原问题形式相同的子问题；
解决：若子问题规模较小而容易被解决则直接解，否则递归地解各个子问题
合并：将各个子问题的解合并为原问题的解。
分解和解决一般被一些判断语句包裹，判断此时是分解还是结果
上面两部全部执行完了才开始合并，通常在函数最下面。
一个函数内并且分治一定有多个递归调用，如果只有一个那么他不是分治算法

