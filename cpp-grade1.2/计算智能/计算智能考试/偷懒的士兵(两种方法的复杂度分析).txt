该题一组数据的求解过程可以写成一个解答树（同时还是完全二叉树），每一个叶子节点都代表一个备选方案（3或2），
在动态规划中备选方案就是边界条件，这样的叶子节点有（大于）n/3个，
同时又因为是每次操作都平分数组，每一层节点的元素个数相差不多（奇数平分不相等但是相差不多）
题目要求求出所有等于3的方案，所以必须要求出所有备选方案，计算等于3的方案有多少，因此要遍历整颗树
问题二：
	方法二使用的是动态规划的方法，动态规划每调用一次方程可视为求出一层的节点，
n长的数组需要大约logn次调用就可以遍历整棵树，求出所有备选方案。所以k组的时间复杂度为O(klogn)
问题一：
	方法一使用的是纯递归的方法，纯递归方法不记录节点，解答树里面有很多重复的节点，每一次都要重新算，
可以认为每一次调用只能算出一个节点，要遍历整颗解答树才可以求出所有备选方案，
一颗深度为x的完全二叉树有2^x到2^(x-1)+1个子节点，这颗树的深度可约为logn，节点数约为n（小于），
所以可以得出纯递归方法求解一组的时间复杂度为O（n），k组的时间复杂度为O（kn）

